<?php
declare(strict_types=1);

/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Controller;

use Cake\Core\Configure;
use Cake\Http\Exception\ForbiddenException;
use Cake\Http\Exception\NotFoundException;
use Cake\Http\Response;
use Cake\View\Exception\MissingTemplateException;

/**
 * Static content controller
 *
 * This controller will render views from templates/Pages/
 *
 * @link https://book.cakephp.org/4/en/controllers/pages-controller.html
 */
class PagesController extends AppController
{
	public $cards= array('S-A','S-2','S-3','S-4','S-5','S-6','S-7','S-8','S-9','S-X','S-J','S-Q','S-K',
						'H-A','H-2','H-3','H-4','H-5','H-6','H-7','H-8','H-9','H-X','H-J','H-Q','H-K',
						'D-A','D-2','D-3','D-4','D-5','D-6','D-7','D-8','D-9','D-X','D-J','D-Q','D-K',
						'C-A','C-2','C-3','C-4','C-5','C-6','C-7','C-8','C-9','C-X','C-J','C-Q','C-K');
    /**
     * Displays a view
     *
     * @param string ...$path Path segments.
     * @return \Cake\Http\Response|null
     * @throws \Cake\Http\Exception\ForbiddenException When a directory traversal attempt.
     * @throws \Cake\View\Exception\MissingTemplateException When the view file could not
     *   be found and in debug mode.
     * @throws \Cake\Http\Exception\NotFoundException When the view file could not
     *   be found and not in debug mode.
     * @throws \Cake\View\Exception\MissingTemplateException In debug mode.
     */
    public function index(string ...$path): ?Response
    {
        if (!$path) {
            return $this->redirect('/');
        }
        if (in_array('..', $path, true) || in_array('.', $path, true)) {
            throw new ForbiddenException();
        }
        $page = $subpage = null;

        if (!empty($path[0])) {
            $page = $path[0];
        }
        if (!empty($path[1])) {
            $subpage = $path[1];
        }
        $this->set(compact('page', 'subpage'));

        try {
            return $this->render(implode('/', $path));
        } catch (MissingTemplateException $exception) {
            if (Configure::read('debug')) {
                throw $exception;
            }
            throw new NotFoundException();
        }
    }
	
	public function submitPlayerNumber()
	{
		$result=array();
		$player=$_POST['player'];
		$num=1;
		
		for($i=0;$i<$player;$i++)
		{
			$result[$num]='';
			$num++;
		}
		
		$cards=$this->cards;
		shuffle($cards);
		
		if($player<52)
		{
			$balance=fmod(52,(int)$player);
			$each_player_get= (52-$balance) / $player;
			
			for($m=0;$m<$each_player_get;$m++)
			{
				foreach($result as $key => $value)
				{
					$result[$key]=$result[$key].",".array_shift($cards); 
				}
			}
			
			$n=1;
			while($n<= $balance)
			{
				$result[$n]=$result[$n].",".array_shift($cards); 
				$n++;
			}
		}
		elseif($player==52)
		{
			foreach($result as $key => $value)
			{
				$result[$key]=$result[$key].",".array_shift($cards); 
			}
		}
		elseif($player>52)
		{
			$n=1;
			while($n<=52)
			{
				$result[$n]=$result[$n].",".array_shift($cards); 
				$n++;
			}
		}
		
		$array1=array();
		$array1['data']=array();
		
		foreach($result as $key => $value)
		{
			$val=ltrim($value,",");
			$array1['data'][]=[$key=>$val];
		}
		
		$this->RequestHandler->respondAs('json');
		$this->response->withType('application/json');  
		$this->autoRender = false; 
		echo json_encode($array1);
	}
}
